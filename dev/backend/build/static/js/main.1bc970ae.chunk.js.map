{"version":3,"sources":["lib/react-component-search.js","lib/react-component-profile-images.js","lib/react-component-queue.js","lib/react-component-mobile-queue.js","lib/react-component-page.js","index.tsx"],"names":["searchResultProps","useZebraStyles","rows","headers","key","header","MySearch","shouldComponentUpdate","newProps","newState","render","react_default","a","createElement","Search","id","placeHolderText","size","labelText","onChange","_this","props","searchQueryOnChangeHandler","document","getElementById","value","React","Component","SearchResult","items","queue","queueURI","length","reduce","map","i","track","uri","searchResultItems","filter","item","TableRow","TableCell","concat","src","album","images","url","className","name","artists","Button","renderIcon","Add16","iconDescription","kind","hasIconOnly","onClick","addTrackToQueueHandler","DataTable","_ref","getHeaderProps","getRowProps","getTableProps","getTableContainerProps","TableContainer","Table","TableBody","SearchPane","socket","spotifyID","abortController","AbortController","_useState","useState","_useState2","Object","slicedToArray","accessToken","setAccessToken","_useState3","_useState4","setQueue","_useState5","_useState6","setItems","useEffect","on","abort","_ref2","asyncToGenerator","regenerator_default","mark","_callee","searchQuery","newItems","requestOptions","response","responseObj","wrap","_context","prev","next","method","Authorization","redirect","signal","fetch","sent","t0","JSON","text","t1","parse","call","tracks","stop","_x","apply","this","arguments","react_component_search_MySearch","react_component_search_SearchResult","_track","duration_ms","console","log","albumImageURL","artistName","emit","ProfileImages","users","setUsers","profileImages","userID","push","profileImageURL","CurrentlyPlayingTrack","QueueTrack","voteHandler","vote","votes","e","stopPropagation","bucket_3","priority","Queue","currentlyPlaying","setCurrentlyPlaying","trackID","QueueTracks","react_component_queue_QueueTrack","assign","react_component_queue_CurrentlyPlayingTrack","toConsumableArray","bottomSheetProps","overflowHeight","shadowTip","topShadow","overlay","scrollTopAtClose","MobileQueue","open","setOpen","SwipeableBottomSheet_default","lib_react_component_queue","URLSearchParams","window","location","search","get","backendURL","io","replace","spotifyLogoutHandler","Page","HeaderContainer","Fragment","Header","aria-label","HeaderName","prefix","HeaderNavigation","lib_react_component_profile_images","HeaderGlobalBar","HeaderGlobalAction","bucket_10","Grid","condensed","Row","Column","sm","span","md","lg","lib_react_component_search","react_component_mobile_queue","vh","innerHeight","documentElement","style","setProperty","addEventListener","lib_react_component_page"],"mappings":"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","file":"static/js/main.1bc970ae.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  DataTable,\n  TableContainer,\n  Table,\n  // TableHead,\n  // TableHeader,\n  TableRow,\n  TableBody,\n  TableCell,\n  Search,\n  // OverflowMenu,\n  // OverflowMenuItem,\n  Button,\n} from \"carbon-components-react\";\nimport styles from \"./react-component-search.css\";\nimport { Add16 } from \"@carbon/icons-react\";\nconst searchResultProps = {\n  useZebraStyles: true,\n  rows: [],\n  headers: [\n    {\n      key: \"image\",\n      header: \"Song\",\n    },\n    {\n      key: \"desc\",\n      header: \"\",\n    },\n    {\n      key: \"overflow\",\n      header: \"\",\n    },\n  ],\n};\n\nclass MySearch extends React.Component {\n  shouldComponentUpdate = (newProps, newState) => false;\n\n  render = () => {\n    return (\n      <Search\n        id=\"search\"\n        placeHolderText={\"Find a song\"}\n        size={\"lg\"}\n        labelText=\"search\"\n        onChange={() => {\n          this.props.searchQueryOnChangeHandler(\n            document.getElementById(\"search\").value\n          );\n        }}\n      />\n    );\n  };\n}\n\nconst SearchResult = (props) => {\n  let { items, queue } = props;\n\n  // We create hashmap of queue uris, so filtering songs not in queue is not O(nm) but rather O(n)\n  let queueURI = {};\n  if (queue.length > 0) {\n    queueURI = queue.reduce((map, i) => {\n      map[i.track.uri] = true;\n      return map;\n    }, {});\n  }\n  items = items.filter((i) => !(i.uri in queueURI));\n\n  const searchResultItems = items.map((item) => {\n    return (\n      <TableRow id={item.id} key={item.id}>\n        <TableCell key={`${item.id}:image`}>\n          <img src={`${item.album.images[0].url}`} className=\"albumPhoto\"></img>\n        </TableCell>\n        <TableCell key={`${item.id}:desc`}>\n          {item.name} - {item.artists[0].name}\n        </TableCell>\n        <TableCell key={`${item.id}:overflow`}>\n          <Button\n            className=\"addToQueueButton\"\n            renderIcon={Add16}\n            iconDescription=\"Add to queue\"\n            kind=\"secondary\"\n            hasIconOnly\n            size=\"small\"\n            onClick={() => {\n              props.addTrackToQueueHandler(item);\n            }}\n          />\n          {/* <OverflowMenu flipped>\n            <OverflowMenuItem\n              itemText=\"Queue\"\n              onClick={() => {\n                props.addTrackToQueueHandler(item);\n              }}\n            ></OverflowMenuItem>\n          </OverflowMenu> */}\n        </TableCell>\n      </TableRow>\n    );\n  });\n\n  return (\n    <DataTable {...searchResultProps}>\n      {({\n        rows,\n        headers,\n        getHeaderProps,\n        getRowProps,\n        getTableProps,\n        getTableContainerProps,\n      }) => (\n        <TableContainer {...getTableContainerProps()}>\n          <Table {...getTableProps()}>\n            <TableBody>{searchResultItems}</TableBody>\n          </Table>\n        </TableContainer>\n      )}\n    </DataTable>\n  );\n};\n\nconst SearchPane = (props) => {\n  const { socket, spotifyID } = props;\n  const abortController = new AbortController();\n\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [queue, setQueue] = useState([]);\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"setAccessToken\", (accessToken) => {\n      setAccessToken(accessToken);\n    });\n    return () => {\n      abortController.abort();\n    };\n  }, [accessToken]);\n\n  useEffect(() => {\n    socket.on(\"setQueue\", (queue) => {\n      setQueue(queue);\n    });\n    return () => {};\n  }, [queue]);\n\n  const searchQueryOnChangeHandler = async (searchQuery) => {\n    let newItems = [];\n    if (searchQuery) {\n      let requestOptions = {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${accessToken}` },\n        redirect: \"follow\",\n        signal: abortController.signal,\n      };\n      let response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=track`,\n        requestOptions\n      );\n      let responseObj = JSON.parse(await response.text());\n      newItems = responseObj.tracks.items;\n    }\n    setItems(newItems);\n  };\n\n  const addTrackToQueueHandler = (track) => {\n    let { id, uri, name, duration_ms } = track;\n    console.log(track);\n    let albumImageURL = track.album.images[0].url;\n    let artistName = track.artists[0].name;\n    track = { id, uri, name, albumImageURL, artistName, duration_ms };\n    socket.emit(\"addTrackToQueue\", { spotifyID, track });\n  };\n\n  return (\n    <div id=\"SearchPane\">\n      <MySearch\n        searchQueryOnChangeHandler={searchQueryOnChangeHandler}\n      ></MySearch>\n      <SearchResult\n        items={items}\n        queue={queue}\n        addTrackToQueueHandler={addTrackToQueueHandler}\n      ></SearchResult>\n    </div>\n  );\n};\n\nexport default SearchPane;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./react-component-profile-images.css\";\n\nconst ProfileImages = (props) => {\n  const socket = props.socket;\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"setUsers\", (users) => {\n      setUsers(users);\n    });\n    return () => {};\n  });\n\n  const profileImages = [];\n  for (let userID in users) {\n    profileImages.push(\n      <img\n        key={`${userID}_profilePhoto`}\n        src={users[userID].profileImageURL}\n      ></img>\n    );\n  }\n\n  return profileImages;\n};\n\nexport default ProfileImages;\n","import React, { useState, useEffect } from \"react\";\nimport styles from \"./react-component-queue.css\";\nimport {\n  // ChevronSortDown32,\n  ChevronSortUp32,\n} from \"@carbon/icons-react\";\n\nconst Queue = (props) => {\n  const { spotifyID, socket } = props;\n  const [queue, setQueue] = useState([]);\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n\n  useEffect(() => {\n    socket.on(\"setQueue\", (queue) => {\n      setQueue(queue);\n    });\n    socket.on(\"setCurrentlyPlaying\", (currentlyPlaying) => {\n      setCurrentlyPlaying(currentlyPlaying);\n    });\n    return () => {};\n  }, [queue]);\n\n  const voteHandler = (vote, trackID) => {\n    socket.emit(\"voteTrack\", { spotifyID, vote, trackID });\n  };\n\n  const QueueTracks = queue.map((i) => {\n    return (\n      <QueueTrack\n        key={`QueueTrack${i.track.id}`}\n        spotifyID={spotifyID}\n        voteHandler={voteHandler}\n        {...i}\n      ></QueueTrack>\n    );\n  });\n\n  return (\n    <div id=\"Queue\">\n      {[\n        <CurrentlyPlayingTrack\n          track={currentlyPlaying}\n        ></CurrentlyPlayingTrack>,\n        ...QueueTracks,\n      ]}\n    </div>\n  );\n};\n\nconst CurrentlyPlayingTrack = (props) => {\n  const { track } = props;\n\n  if (track) {\n    return (\n      <div className=\"currently-playing\">\n        <div>\n          <img src={`${track.albumImageURL}`}></img>\n        </div>\n        <div>{track.name + \" - \" + track.artistName}</div>\n      </div>\n    );\n  } else {\n    return <div className=\"queue-track\"></div>;\n  }\n};\n\nconst QueueTrack = (props) => {\n  const { spotifyID, voteHandler, track } = props;\n  const vote = spotifyID in props.votes ? props.votes[spotifyID] : 0;\n\n  return (\n    <div className=\"queue-track\">\n      <div>\n        <img src={`${track.albumImageURL}`}></img>\n      </div>\n      <div>{track.name + \" - \" + track.artistName}</div>\n      <div\n        className=\"queue-track-vote-col\"\n        onClick={(e) => {\n          // If already upvote, we remove vote, and its neutral\n          if (vote === 1) {\n            voteHandler(0, track.id);\n          } else {\n            voteHandler(1, track.id);\n          }\n\n          e.stopPropagation();\n        }}\n      >\n        <div>\n          <ChevronSortUp32 className={vote === 1 ? \"active\" : \"\"} />\n        </div>\n        <div>{props.priority}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Queue;\n","import React, { useState, useEffect } from \"react\";\nimport Queue from \"./react-component-queue\";\nimport SwipeableBottomSheet from \"react-swipeable-bottom-sheet\";\n\nconst bottomSheetProps = {\n  overflowHeight: 60,\n  shadowTip: false,\n  topShadow: false,\n  overlay: false,\n  scrollTopAtClose: true,\n};\nconst MobileQueue = (props) => {\n  const { spotifyID, socket } = props;\n\n  const [open, setOpen] = useState(false);\n\n  return (\n    <div\n      onClick={() => {\n        setOpen(!open);\n      }}\n    >\n      <SwipeableBottomSheet {...bottomSheetProps} open={open}>\n        <div id=\"MobileQueueWrapper\">\n          <Queue socket={socket} spotifyID={spotifyID}></Queue>\n        </div>\n      </SwipeableBottomSheet>\n    </div>\n  );\n};\n\nexport default MobileQueue;\n","import React, { useState, useEffect } from \"react\";\nimport SearchPane from \"./react-component-search\";\nimport ProfileImages from \"./react-component-profile-images\";\nimport Debug from \"./react-component-debug\";\nimport Queue from \"./react-component-queue\";\nimport MobileQueue from \"./react-component-mobile-queue\";\nimport {\n  Header,\n  HeaderName,\n  HeaderNavigation,\n  HeaderContainer,\n  HeaderGlobalBar,\n  HeaderGlobalAction,\n  Grid,\n  Row,\n  Column,\n} from \"carbon-components-react\";\nimport { Logout20 } from \"@carbon/icons-react\";\nimport styles from \"./react-component-page.css\";\nimport io from \"socket.io-client\";\n\nconst urlSearchParams = new URLSearchParams(window.location.search);\nconst spotifyID = urlSearchParams.get(\"spotifyID\");\n// const backendURL = \"http://0.0.0.0\";\nconst backendURL = \"https://nitrus.azurewebsites.net\";\n\nconst socket = io(backendURL);\nsocket.on(\"connect\", () => {\n  socket.emit(\"init\", spotifyID);\n});\nsocket.on(\"redirectToLogin\", () => {\n  window.location.replace(`${backendURL}/login`);\n});\n\nconst spotifyLogoutHandler = () => {\n  window.location.replace(\"https://www.spotify.com/logout/\");\n};\n\nconst Page = () => {\n  return (\n    <div id=\"page\">\n      <HeaderContainer\n        render={() => (\n          <>\n            <Header aria-label=\"Nitrus\">\n              <HeaderName prefix=\"\">Nitrus</HeaderName>\n              <HeaderNavigation aria-label=\"Nitrus\">\n                <>\n                  <ProfileImages socket={socket}></ProfileImages>\n                </>\n              </HeaderNavigation>\n              <HeaderGlobalBar>\n                <HeaderGlobalAction\n                  id=\"logoutIcon\"\n                  aria-label=\"Logout\"\n                  onClick={spotifyLogoutHandler}\n                >\n                  <Logout20 />\n                </HeaderGlobalAction>\n              </HeaderGlobalBar>\n            </Header>\n            <Grid condensed>\n              <Row>\n                <Column sm={{ span: 0 }} md={2} lg={2}>\n                  <div id=\"DesktopQueueWrapper\">\n                    <Queue socket={socket} spotifyID={spotifyID}></Queue>\n                  </div>\n                </Column>\n                <Column sm={4} md={6} lg={10}>\n                  <SearchPane\n                    socket={socket}\n                    spotifyID={spotifyID}\n                  ></SearchPane>\n                </Column>\n\n                <Column sm={1} md={{ span: 0 }} lg={{ span: 0 }}>\n                  <MobileQueue\n                    socket={socket}\n                    spotifyID={spotifyID}\n                  ></MobileQueue>\n                </Column>\n              </Row>\n\n              {/* DEBUG */}\n              {/* <Row>\n                <>\n                  <Column>\n                    <Debug socket={socket}></Debug>\n                  </Column>\n                </>\n              </Row> */}\n            </Grid>\n          </>\n        )}\n      />\n    </div>\n  );\n};\nexport default Page;\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport Page from \"./lib/react-component-page\";\n\n// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\nconst vh = window.innerHeight * 0.01;\ndocument.documentElement.style.setProperty(\"--vh\", `${vh}px`);\nwindow.addEventListener(\"resize\", () => {\n  // https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n  const vh = window.innerHeight * 0.01;\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n});\n\nrender(<Page />, document.getElementById(\"root\"));\n"],"sourceRoot":""}